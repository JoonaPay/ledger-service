export interface TemplateData {
    entityName: string;
    entityNamePascal: string;
    entityNameCamel: string;
    entityNameKebab: string;
    entityNameSnake: string;
    entityNamePlural: string;
    entityNamePluralKebab: string;
    tableName: string;
    moduleName: string;
    moduleNameKebab: string;
    properties?: Array<{
        name: string;
        type: string;
        isRequired: boolean;
        isRelation: boolean;
    }>;
}
export declare function prepareTemplateData(entityName: string, moduleName: string): TemplateData;
export declare function ensureDir(dirPath: string): Promise<void>;
export declare function fileExists(filePath: string): Promise<boolean>;
export declare function writeFile(filePath: string, content: string): Promise<void>;
export declare function readTemplate(templatePath: string): Promise<string>;
export declare function compileTemplate(template: string, data: TemplateData): string;
export declare function generateFromTemplate(templatePath: string, outputPath: string, data: TemplateData): Promise<void>;
export declare function getModulePath(basePath: string, moduleName: string): string;
